
CHRS = [str(x) for x in range(1, 22)]
#CHRS = [str(x) for x in [21, 22]]

OUTPUT_FOLDER = "/dcs04/hansen/data/recount_genotype/geuvadis/"


rule all:
    input:
         OUTPUT_FOLDER + "subset_to_protein_coding/geuvadis.biallelicSNPs.proteinCoding.gr.rda"

rule index_vcf:
    input:
        "/dcs04/legacy-dcs01-ajaffe/GEUVADIS/Genotypes/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.vcf.gz"
    output:
        VCF = temp(OUTPUT_FOLDER + "indexed_vcf/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.vcf"),
        VCF_gz = temp(OUTPUT_FOLDER + "indexed_vcf/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.vcf.gz"),
        VCF_gz_idx = temp(OUTPUT_FOLDER + "indexed_vcf/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.vcf.gz.csi")
    params:
        OUTPUT_FOLDER = OUTPUT_FOLDER,
        tempVCF = OUTPUT_FOLDER + "indexed_vcf/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.vcf.gz"
    shell:
        """
        module load htslib
        module load bcftools
        cp {input} {params.OUTPUT_FOLDER}indexed_vcf/
        gunzip {params.tempVCF}
        bgzip -c {output.VCF} > {output.VCF_gz}
        bcftools index {output.VCF_gz}
        """

#The VCF is missing PP and BD ID tags in header, and bcftools can't do anything to filter unless the header is complete.
rule add_header:
    input:
        OUTPUT_FOLDER + "indexed_vcf/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.vcf.gz"
    output:
        VCF = temp(OUTPUT_FOLDER + "add_header/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.reheadered.vcf"),
        VCF_idx = temp(OUTPUT_FOLDER + "add_header/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.reheadered.vcf.csi")
    params:
        header = OUTPUT_FOLDER + "add_header/{chr}_header.vcf"
    shell:
        """
        module load bcftools
        bcftools view --header-only {input} > {params.header}
        sed -i '/Genotype Likelihood/a ##FORMAT=<ID=PP,Number=.,Type=String,Description="">' {params.header}
        sed -i '/Genotype Likelihood/a ##FORMAT=<ID=BD,Number=.,Type=String,Description="">' {params.header}
        bcftools reheader --header {params.header} {input} --output {output.VCF}
        bcftools index {output.VCF}
        """

rule filter_cols: 
    input:
        OUTPUT_FOLDER + "add_header/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.reheadered.vcf"
    output:
        temp(OUTPUT_FOLDER + "filter_cols/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.reheadered.filtered.vcf")
    shell:
        """
        module load bcftools
        bcftools annotate -x ^INFO/AF,INFO/AC,INFO/AN,INFO/AA,^FORMAT/GT {input} -o {output}
        """

rule add_chr:
    input:
        OUTPUT_FOLDER + "filter_cols/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.reheadered.filtered.vcf"
    output:
        temp(OUTPUT_FOLDER + "add_chr/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.reheadered.filtered.chr.vcf")
    shell:
        """
        sh add_chr.sh {input} {output}
        """

rule liftover:
    input:
        VCF = OUTPUT_FOLDER + "add_chr/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.reheadered.filtered.chr.vcf",
        Picard = OUTPUT_FOLDER + "picard.jar",
        Chain = OUTPUT_FOLDER + "hg19ToHg38.over.chain.gz",
        Hg38 = "/dcl01/hansen/data/arazi/gtex_count/genotype/hg38.fa.gz"
    output:
        VCF = temp(OUTPUT_FOLDER + "liftover/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.reheadered.filtered.chr.hg38.vcf"),
        Reject = temp(OUTPUT_FOLDER + "liftover/{chr}_trash.vcf")
    shell:
        """
        java -jar {input.Picard} LiftoverVcf --CHAIN {input.Chain} --INPUT {input.VCF} --OUTPUT {output.VCF} --REFERENCE_SEQUENCE {input.Hg38} --REJECT {output.Reject}
        """

rule compress:
    input: 
        OUTPUT_FOLDER + "liftover/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.reheadered.filtered.chr.hg38.vcf"
    output:
        OUTPUT_FOLDER + "liftover/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.reheadered.filtered.chr.hg38.vcf.gz"
    shell:
        """
        module load htslib
        module load bcftools
        bgzip -c {input} > {output}
        bcftools index {output}
        """

rule concat:
    input:
        expand(OUTPUT_FOLDER + "liftover/GEUVADIS.chr{chr}.PH1PH2_465.IMPFRQFILT_BIALLELIC_PH.annotv2.genotypes.reheadered.filtered.chr.hg38.vcf.gz", chr=CHRS)
    output:
        OUTPUT_FOLDER + "concat/geuvadis.hg38.vcf"
    shell:
        """
        module load bcftools
        bcftools concat -a -D {input} --output {output} --output-type z
        bcftools index {output}
        """

rule get_biallelic_snp:
    input:
        OUTPUT_FOLDER + "concat/geuvadis.hg38.vcf"
    output:
        OUTPUT_FOLDER + "get_biallelic_snp/geuvadis.biallelicSNPs.txt"
    shell:
        """
        module load bcftools
        bcftools norm -m +any {input} | bcftools view -m2 -M2 -v snps | bcftools view -s HG00105 | bcftools query -f '%CHROM %POS %REF %ALT AF:[ %AF]\n' > {output}
        """

rule subset_to_protein_coding:
    input:
        OUTPUT_FOLDER + "get_biallelic_snp/geuvadis.biallelicSNPs.txt"
    output:
        OUTPUT_FOLDER + "subset_to_protein_coding/geuvadis.biallelicSNPs.proteinCoding.gr.rda"
    shell:
        """
        Rscript subset_to_protein_coding.R --input {input} --output {output}
        """

